{"version":3,"sources":["components/Task/Todo.jsx","context/TodoContext.js","components/Task/Todos.jsx","components/Task/AddNewTodo.jsx","containers/App.js","index.js"],"names":["Todo","text","isCompleted","deleted","completed","className","onClick","TodoContext","createContext","state","handleDeleteTodo","handleNewTodo","handleTodoInput","handleCompletedTodo","Todos","Consumer","context","todos","length","map","todo","id","Component","AddNewTodo","useContext","onSubmit","e","preventDefault","type","placeholder","value","onChange","style","marginTop","color","App","props","appTitle","filteredTodo","filter","p","setState","toast","error","position","closeButton","closeOnClick","allTodos","todoIndex","findIndex","Math","floor","random","push","success","document","querySelector","target","Provider","this","rtl","ReactDom","render","getElementById"],"mappings":"gLAwCeA,EAtCF,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAC1C,OACE,eAAC,WAAD,WACE,qBACEC,UAAS,0BACPH,EAAc,aAAe,gBAGjC,qBAAKG,UAAU,qBAAf,SACE,sBAAKA,UAAU,yBAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,qBAAKA,UAAU,iBAAf,SACGH,EAAc,8BAAMD,IAAcA,MAGvC,sBAAKI,UAAU,sBAAf,UACG,IACD,yBACEA,UAAU,kDACVC,QAASF,EAFX,UAIG,IACD,mBAAGC,UAAU,mBACL,IACV,yBACEA,UAAU,iDACVC,QAASH,EAFX,UAIG,IACD,mBAAGE,UAAU,gBAAmB,OACxB,gBCrBPE,EARKC,wBAAc,CAChCC,MAAO,GACPC,iBAAkB,aAClBC,cAAe,aACfC,gBAAiB,aACjBC,oBAAqB,eCuBRC,E,4JA3Bb,WACE,OACE,cAAC,EAAYC,SAAb,UACG,SAACC,GAAD,OACCA,EAAQP,MAAMQ,MAAMC,OAAS,EAC3BF,EAAQP,MAAMQ,MAAME,KAAI,SAACC,GAAD,OACtB,oBAAgCf,UAAU,kBAA1C,SACE,cAAC,EAAD,CACEJ,KAAMmB,EAAKnB,KACXC,YAAakB,EAAKhB,UAClBD,QAAS,kBAAMa,EAAQN,iBAAiBU,EAAKC,KAC7CjB,UAAW,kBAAMY,EAAQH,oBAAoBO,EAAKC,QAL7CL,EAAQP,MAAMW,KAAKC,OAU9B,qBAAKhB,UAAU,sCAAf,SACE,mBAAGA,UAAU,cAAb,4M,GAlBMiB,aCgCLC,EAhCI,WACjB,IAAMP,EAAUQ,qBAAWjB,GAE3B,OACE,qBAAKF,UAAU,6CAAf,SACE,sBACEA,UAAU,qCACVoB,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBAFrB,SAIE,sBAAKtB,UAAU,2BAAf,UACE,uBACEuB,KAAK,OACLvB,UAAU,uBACVwB,YAAY,sGACZC,MAAOd,EAAQI,KACfW,SAAUf,EAAQJ,gBAClBS,GAAG,iBAEL,qBAAKhB,UAAU,sBAAf,SACE,wBACEuB,KAAK,SACLvB,UAAU,oDACVC,QAASU,EAAQL,cACjBqB,MAAO,CAAEC,UAAW,OAAQC,MAAO,uBCiElCC,E,kDA7Eb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAPR3B,MAAQ,CACNQ,MAAO,GACPG,KAAM,GACNiB,SAAU,sGAGO,EAInB3B,iBAAmB,SAACW,GAClB,IACIiB,EADK,YAAO,EAAK7B,MAAMQ,OACFsB,QAAO,SAACC,GAAD,OAAOA,EAAEnB,KAAOA,KAChD,EAAKoB,SAAS,CAAExB,MAAOqB,IACvBI,IAAMC,MAAM,wGAAyB,CACnCC,SAAU,YACVC,aAAa,EACbC,cAAc,KAXC,EAenBjC,oBAAsB,SAACQ,GACrB,IAAMJ,EAAK,YAAO,EAAKR,MAAMQ,OACd8B,EAAa,EAAKtC,MAAzBQ,MACF+B,EAAYD,EAASE,WAAU,SAACT,GAAD,OAAOA,EAAEnB,KAAOA,KAC/CD,EAAO2B,EAASC,GACtB5B,EAAKhB,WAAagB,EAAKhB,UACvBa,EAAM+B,GAAa5B,EACnB,EAAKqB,SAAS,CAAExB,WAtBC,EAwBnBN,cAAgB,WACd,IAAMM,EAAK,YAAO,EAAKR,MAAMQ,OACvBG,EAAO,CACXC,GAAI6B,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBnD,KAAM,EAAKQ,MAAMW,KACjBhB,WAAW,GAGA,KAATgB,GAAwB,MAATA,IACjBH,EAAMoC,KAAKjC,GACX,EAAKqB,SAAS,CAAExB,QAAOG,KAAM,KAC7BsB,IAAMY,QAAQ,oHAA2B,CACvCV,SAAU,eACVC,aAAa,EACbC,cAAc,KAGlBS,SAASC,cAAc,iBAAiB1B,MAAQ,IAzC/B,EA4CnBlB,gBAAkB,SAACc,GACjB,EAAKe,SAAS,CAAErB,KAAMM,EAAE+B,OAAO3B,SA7Cd,E,0CAgDnB,WACE,OACE,cAAC,EAAY4B,SAAb,CACE5B,MAAO,CACLrB,MAAOkD,KAAKlD,MACZC,iBAAkBiD,KAAKjD,iBACvBC,cAAegD,KAAKhD,cACpBE,oBAAqB8C,KAAK9C,oBAC1BD,gBAAiB+C,KAAK/C,iBAN1B,SASE,eAAC,WAAD,WACG,IAED,qBAAKP,UAAU,8CAAf,SACE,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,wCAAf,SACE,cAAC,EAAD,UAIN,cAAC,EAAD,IACA,cAAC,IAAD,CAAgBuD,KAAG,a,GA7EXtC,aCHlBuC,IAASC,OAAO,cAAC,EAAD,IAASP,SAASQ,eAAe,W","file":"static/js/main.7862c5b1.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\n\r\nconst Todo = ({ text, isCompleted, deleted, completed }) => {\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={`todo-indicator  ${\r\n          isCompleted ? \"bg-success\" : \"bg-warning\"\r\n        }`}\r\n      ></div>\r\n      <div className=\"widget-content p-0\">\r\n        <div className=\"widget-content-wrapper\">\r\n          <div className=\"widget-content-right flex1\">\r\n            <div className=\"widget-heading\">\r\n              {isCompleted ? <del>{text}</del> : text}\r\n            </div>\r\n          </div>\r\n          <div className=\"widget-content-left\">\r\n            {\" \"}\r\n            <button\r\n              className=\"border-0 btn-transition btn btn-outline-success\"\r\n              onClick={completed}\r\n            >\r\n              {\" \"}\r\n              <i className=\"fa fa-check\"></i>\r\n            </button>{\" \"}\r\n            <button\r\n              className=\"border-0 btn-transition btn btn-outline-danger\"\r\n              onClick={deleted}\r\n            >\r\n              {\" \"}\r\n              <i className=\"fa fa-trash\"></i>{\" \"}\r\n            </button>{\" \"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import { createContext } from \"react\";\r\nimport { cssTransition } from \"react-toastify\";\r\n\r\nconst TodoContext = createContext({\r\n  state: {},\r\n  handleDeleteTodo: () => {},\r\n  handleNewTodo: () => {},\r\n  handleTodoInput: () => {},\r\n  handleCompletedTodo: () => {},\r\n});\r\n\r\nexport default TodoContext;\r\n","import React, { Component } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport TodoContext from \"../../context/TodoContext\";\r\nclass Todos extends Component {\r\n  render() {\r\n    return (\r\n      <TodoContext.Consumer>\r\n        {(context) =>\r\n          context.state.todos.length > 0 ? (\r\n            context.state.todos.map((todo) => (\r\n              <li key={context.state.todo.id} className=\"list-group-item\">\r\n                <Todo\r\n                  text={todo.text}\r\n                  isCompleted={todo.completed}\r\n                  deleted={() => context.handleDeleteTodo(todo.id)}\r\n                  completed={() => context.handleCompletedTodo(todo.id)}\r\n                />\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <div className=\"alert alert-light mt-3 w-75 mx-auto\">\r\n              <p className=\"text-center\">\r\n                هیچ کاری برای امروز ثبت نشده دوست من\r\n              </p>\r\n            </div>\r\n          )\r\n        }\r\n      </TodoContext.Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Todos;\r\n","import React, { useContext } from \"react\";\r\nimport TodoContext from \"../../context/TodoContext\";\r\n\r\nconst AddNewTodo = () => {\r\n  const context = useContext(TodoContext);\r\n\r\n  return (\r\n    <div className=\"w-50 mx-auto fixed-bottom mb-5 p-3 wrapper\">\r\n      <form\r\n        className=\"form-inline justify-content-center\"\r\n        onSubmit={(e) => e.preventDefault()}\r\n      >\r\n        <div className=\"input-group w-100 d-flex\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control rounded\"\r\n            placeholder=\"اضافه کردن کار جدید\"\r\n            value={context.todo}\r\n            onChange={context.handleTodoInput}\r\n            id=\"newTodoInput\"\r\n          />\r\n          <div className=\"input-group-prepend\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-sm bg-transparent fa fa-2x fa-plus-square\"\r\n              onClick={context.handleNewTodo}\r\n              style={{ marginTop: \"-2px\", color: \"#9fff80\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewTodo;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport Todos from \"../components/Task/Todos\";\r\nimport TodoContext from \"../context/TodoContext\";\r\nimport AddNewTodo from \"../components/Task/AddNewTodo\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    todos: [],\r\n    todo: \"\",\r\n    appTitle: \"لیست کارهای روزانه\",\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handleDeleteTodo = (id) => {\r\n    let todos = [...this.state.todos];\r\n    let filteredTodo = todos.filter((p) => p.id !== id);\r\n    this.setState({ todos: filteredTodo });\r\n    toast.error(\"کار با موفقیت حذف شد.\", {\r\n      position: \"top-right\",\r\n      closeButton: true,\r\n      closeOnClick: true,\r\n    });\r\n  };\r\n\r\n  handleCompletedTodo = (id) => {\r\n    const todos = [...this.state.todos];\r\n    const { todos: allTodos } = this.state;\r\n    const todoIndex = allTodos.findIndex((p) => p.id === id);\r\n    const todo = allTodos[todoIndex];\r\n    todo.completed = !todo.completed;\r\n    todos[todoIndex] = todo;\r\n    this.setState({ todos });\r\n  };\r\n  handleNewTodo = () => {\r\n    const todos = [...this.state.todos];\r\n    const todo = {\r\n      id: Math.floor(Math.random() * 1000),\r\n      text: this.state.todo,\r\n      completed: false,\r\n      //   use uuid\r\n    };\r\n    if (todo !== \"\" && todo !== \" \") {\r\n      todos.push(todo);\r\n      this.setState({ todos, todo: \"\" });\r\n      toast.success(\"کار با موفقیت اضافه شد.\", {\r\n        position: \"bottom-right\",\r\n        closeButton: true,\r\n        closeOnClick: true,\r\n      });\r\n    }\r\n    document.querySelector(\"#newTodoInput\").value = \"\";\r\n  };\r\n\r\n  handleTodoInput = (e) => {\r\n    this.setState({ todo: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <TodoContext.Provider\r\n        value={{\r\n          state: this.state,\r\n          handleDeleteTodo: this.handleDeleteTodo,\r\n          handleNewTodo: this.handleNewTodo,\r\n          handleCompletedTodo: this.handleCompletedTodo,\r\n          handleTodoInput: this.handleTodoInput,\r\n        }}\r\n      >\r\n        <Fragment>\r\n          {\" \"}\r\n          {/* just an example of HOC */}\r\n          <div className=\"rtl d-flex justify-content-center container\">\r\n            <div className=\"col-md-8\">\r\n              <div className=\"card-hover-shadow-2x mb-3 card p-card\">\r\n                <Todos />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <AddNewTodo />\r\n          <ToastContainer rtl />\r\n        </Fragment>\r\n      </TodoContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./containers/App\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}